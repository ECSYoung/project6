{"version":3,"sources":["firebase.js","Components/Helmet.js","Components/Preloader.js","Components/Header.js","Components/Search.js","Components/ProductText.js","Components/ProductImage.js","Components/ReviewReadPanel.js","Components/StarRating.js","Components/ReviewSubmitButton.js","Components/ReviewForm.js","Components/ReviewParent.js","Components/ProductInfo.js","Components/ResultItem.js","Components/Results.js","Components/Carousel.js","Components/FilterResults.js","Components/Sorting.js","Components/Wishlist.js","Components/UserReviews.js","Components/Main.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","Application","className","Helmet","name","content","property","React","Component","Preloader","id","Header","handleClick","setState","isUp","state","to","this","props","user","displayName","email","exact","activeStyle","display","isActive","_","pathname","test","onClick","logout","icon","faChevronCircleDown","faListAlt","tabIndex","aria-label","login","Search","escapeRegexCharacters","str","replace","getSuggestions","value","escapedValue","trim","toLowerCase","regex","RegExp","suggestionsOptions","filter","suggestion","getSuggestionValue","renderSuggestion","query","suggestionText","matches","AutosuggestHighlightMatch","parts","AutosuggestHighlightParse","map","part","index","highlight","key","text","onChange","event","newValue","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","onSuggestionSelected","e","suggestionValue","suggestionIndex","sectionIndex","method","preventDefault","handleSubmit","handleSearchInput","Swal","fire","title","veganProducts","forEach","dataObject","brand","push","product_type","suggestionsUnique","Set","inputProps","placeholder","onSubmit","htmlFor","slice","focusInputOnSuggestionClick","ProductText","addToWishlist","product","price","price_sign","parseInt","toFixed","currency","rating","faPlusCircle","ReviewLink","match","useRouteMatch","path","activateOnlyWhenExact","setActiveID","label","ProductImage","src","api_featured_image","alt","ReviewReadPanel","review","console","log","reviewDate","userImg","userName","userReview","userRepurchase","userRating","StarRating","hoverHandler","ev","stars","target","parentElement","getElementsByClassName","hoverValue","dataset","Array","from","star","style","color","setRating","refs","currentRating","starClickHandler","starRatingFuncProp","handleKeyPress","ref","data-rating","onMouseOut","numberOfStars","keys","n","data-value","onMouseOver","onKeyDown","ReviewSubmitButton","readReview","type","ReviewForm","action","handleFormSubmit","format","ticking","timezone","date","output","handleChange","userNameProp","rows","cols","handleChangeTxtArea","userReviewProp","radioChange","starRatingFunc","ReviewParent","changeEvent","dbRef","database","activeID","dbRefUser","userID","productID","setRead","isWriting","toggleReadReview","setWrite","getStarRating","getUserInputDateTime","currentDateTime","reviews","isReviewing","uid","photoURL","on","response","dataFromDb","val","newState","userStarProp","onStarClick","userRatingProp","dateProp","length","reviewList","ProductInfo","maxLength","description","substring","href","product_link","rel","product_colors","colour_name","background","hex_value","render","userCheck","ResultItem","Results","checkForProduct","itemAlreadyOnList","wishlist","Object","values","off","filteredResults","Carousel","randomVeganArray","veganArrayCopy","allItemsArray","randomFive","i","randomNum","Math","floor","random","splice","width","height","displayQuantityOfSide","enableScroll","clickable","active","eachItem","image_link","data-action","FilterResults","filterSelection","set","refineArray","checked","add","delete","updateRefinedItemsMain","updaterefinedItems","class","ame","Sorting","sortingHandle","sortDataArray","split","isAscending","sortData","ascending","updateSortBy","Wishlist","userWishlist","dbRefUserWish","location","productIDs","productArray","UserReviews","products","dataFromDB","reviewedProducts","indexOf","customHistory","createBrowserHistory","Main","input","validateInput","searchInput","isSearched","filterResults","sortArray","arrayToSort","sortingArray","sort","productA","productB","returnValue","productAValue","sortBy","productBValue","isNaN","toUpperCase","parseFloat","filteredArray","sortedArray","productType","productName","productBrand","includes","originalResults","newResults","refinedCategory","filterRefinedArray","eachProduct","tag_list","eachTag","choice","sortedRefinedArray","option","userCheckProps","Footer","App","signInWithPopup","then","result","signOut","veganArray","isLoading","axios","url","responseType","params","product_tags","data","onAuthStateChanged","currentUser","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.69281698.chunk.js","sourcesContent":["// firebase.js\r\nimport firebase from \"firebase\";\r\n\r\n// Initialize Firebase\r\n// USE YOUR CONFIG OBJECT\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCd2gqxrwZeTSOKYXliPvRpQK52kk_TVwc\",\r\n    authDomain: \"ethicalmakeup-9f173.firebaseapp.com\",\r\n    databaseURL: \"https://ethicalmakeup-9f173.firebaseio.com\",\r\n    projectId: \"ethicalmakeup-9f173\",\r\n    storageBucket: \"ethicalmakeup-9f173.appspot.com\",\r\n    messagingSenderId: \"446242384772\",\r\n    appId: \"1:446242384772:web:26fb2fdb2b7bc6716bcbd1\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// this exports the CONFIGURED version of firebase\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\nexport default firebase;","// a couple of functions from the React library\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nclass Application extends React.Component {\r\n    render() {\r\n        return (\r\n        <div className=\"application\">\r\n            <Helmet>\r\n            <title>• Ethical Makeup •</title>\r\n            {/* search metadata */}\r\n            <meta name=\"description\" content=\"Search for vegan makeup products\" />\r\n            <meta name=\"robots\" content=\"index, nofollow\" />\r\n            <meta name=\"author\" content=\"Sui Young, Naveen Malhotra, Jobert Manosca, Stephanie Kerr\" />\r\n            {/* twitter metadata */}\r\n            <meta name=\"twitter:card\" content=\"summary\" />\r\n            <meta name=\"twitter:title\" content=\"Ethical Makeup\" />\r\n            <meta name=\"twitter:description\"\r\n                content=\"Search for vegan makeup products\" />\r\n            {/* <meta name=\"twitter:image\" content=\"\" /> */}\r\n            {/* linkedin and facebook metadata */}\r\n            <meta property=\"og:url\" content=\"https://ethicalMakeupC25.github.io/project6/\" />\r\n            <meta property=\"og:type\" content=\"website\" />\r\n            <meta property=\"og:title\" content=\"Ethical Makeup\" />\r\n            <meta property=\"og:description\"\r\n                content=\"Search for vegan makeup products\" />\r\n            {/* <meta property=\"og:image\" content=\"\" /> */}\r\n            </Helmet>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Application;\r\n","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"preloader\">\r\n            <div id=\"global\">\r\n\r\n                <div id=\"top\" className=\"mask\">\r\n                    <div className=\"plane\"></div>\r\n                </div>\r\n                <div id=\"middle\" className=\"mask\">\r\n                    <div className=\"plane\"></div>\r\n                </div>\r\n\r\n                <div id=\"bottom\" className =\"mask\">\r\n\r\n      <div className=\"plane\"></div>\r\n                </div>\r\n\r\n                <p>LOADING...</p>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React, { Fragment, Component } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faListAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport { faChevronCircleDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Header extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isUp: false,\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({\r\n            isUp: !this.state.isUp\r\n        })\r\n    }\r\n\r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <header>\r\n                <nav className=\"wrapper\">\r\n                    <Link to=\"/project6/\"><h1>Ethical Makeup</h1></Link>\r\n                    {\r\n                        //null is falsy .: if props.user is null, show login\r\n                        //if props.user is truthy, show additional features and logout\r\n                        this.props.user\r\n                        ?\r\n                            <Fragment>\r\n                                <div className=\"userDetails\">\r\n                                    {/* if no displayname exists, show email */}\r\n                                    <p>Hi {this.props.user.displayName || this.props.user.email}!</p>\r\n                                    <div className=\"buttonContainer\">\r\n                                        <NavLink\r\n                                            exact\r\n                                            to=\"/project6/\"\r\n                                            className=\"linkStyle\"\r\n                                            activeStyle={{display: \"none\"}}\r\n                                            isActive={(_, { pathname }) => {\r\n                                                const regex = /\\/project6\\/products.*$/gmi;\r\n                                                return pathname === '/project6' || pathname === '/project6/' ? true : regex.test(pathname);\r\n                                            }}\r\n                                        >search</NavLink>\r\n                                        <NavLink to=\"/project6/wishlist\" className=\"linkStyle\" activeStyle={{display: \"none\"}}>wishlist</NavLink>\r\n                                        <NavLink to=\"/project6/reviews\" className=\"linkStyle\" activeStyle={{display: \"none\"}}>your reviews</NavLink>\r\n                                        <button className=\"navButton\" onClick={this.props.logout}>log out</button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mobileUserDetails\">\r\n                                    <div className=\"wrapper\">\r\n                                        <div className=\"display\">\r\n                                            {/* if no displayname exists, show email */}\r\n                                            <p>Hi {this.props.user.displayName || this.props.user.email}!</p>\r\n                                            <FontAwesomeIcon icon={this.state.isUp ? faChevronCircleDown : faListAlt} className=\"toggleMenu\" tabIndex=\"0\" aria-label=\"open and close user menu\" onClick={this.handleClick} />\r\n                                        </div>\r\n                                        {\r\n                                            this.state.isUp\r\n                                                ?\r\n                                                <div className=\"buttonContainer\">\r\n                                                    <NavLink\r\n                                                        exact\r\n                                                        to=\"/project6/\"\r\n                                                        className=\"linkStyle\"\r\n                                                        activeStyle={{display: \"none\"}}\r\n                                                        isActive={(_, { pathname }) => {\r\n                                                            const regex = /\\/project6\\/products.*$/gmi;\r\n                                                            return pathname === '/project6' || pathname === '/project6/' ? true : regex.test(pathname);\r\n                                                        }}\r\n                                                    >search</NavLink>\r\n                                                    <NavLink to=\"/project6/wishlist\" className=\"linkStyle\" activeStyle={{display: \"none\"}}>wishlist</NavLink>\r\n                                                    <NavLink to=\"/project6/reviews\" className=\"linkStyle\" activeStyle={{display: \"none\"}}>your reviews</NavLink>\r\n                                                    <button className=\"navButton\" onClick={this.props.logout}>log out</button>\r\n                                                </div>\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        :\r\n                            <button \r\n                                onClick={this.props.login}\r\n                                className=\"logInButton navButton\">log in to save to wishlist</button>\r\n                    }\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from 'autosuggest-highlight/match';\r\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse';\r\nimport Swal from 'sweetalert2';\r\n// all functions below related to suggestions has been adapted from https://www.npmjs.com/package/react-autosuggest and https://codepen.io/moroshko/pen/PZWbzK\r\n\r\nclass Search extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            value: '',\r\n            suggestions: [],\r\n            suggestionsOptions: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // pull brands, product types and names for autosuggestions by iterating over veganProducts and pushing brand, product type and name values to an empty array\r\n        const suggestions = [];\r\n        this.props.veganProducts.forEach((dataObject) => {\r\n            //null and undefined is falsy, .: don't push these values\r\n            if (dataObject.brand) {\r\n                suggestions.push(dataObject.brand)\r\n            }\r\n            if (dataObject.product_type) {\r\n                suggestions.push(dataObject.product_type)\r\n                // NOTE TO SELF: NEED TO WASH _ TO SPACES\r\n            }\r\n            if (dataObject.name) {\r\n                suggestions.push(dataObject.name)\r\n            }\r\n        })\r\n        // Set will filter out duplicates from the array\r\n        const suggestionsUnique = [...new Set(suggestions)];\r\n\r\n        // update state with processed suggestions from veganProducts\r\n        this.setState({\r\n            suggestionsOptions: suggestionsUnique\r\n        })\r\n    }\r\n\r\n    //escape special characters for search\r\n    escapeRegexCharacters = (str) => {\r\n        //escaped everything but '.' because of a common search result: 'e.l.f.'\r\n        return str.replace(/[*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n    }\r\n\r\n    //this function teaches autosuggest how to calculate suggestions for any given input value\r\n    getSuggestions = (value) => {\r\n        const escapedValue = this.escapeRegexCharacters(value.trim().toLowerCase());\r\n\r\n        if (escapedValue === '') {\r\n            return [];\r\n        }\r\n\r\n        const regex = new RegExp('\\\\b' + escapedValue, 'i');\r\n\r\n        return this.state.suggestionsOptions.filter(suggestion => regex.test(this.getSuggestionValue(suggestion)));\r\n    }\r\n\r\n    //when suggestion is clicked, autosuggest needs to populate input based on clicked suggestion\r\n    //this function teaches autosuggest how to calculate the input value for every given suggestion\r\n    getSuggestionValue = suggestion => suggestion;\r\n\r\n    //render the list of suggestions\r\n    renderSuggestion = (suggestion, { query }) => {\r\n        const suggestionText = suggestion;\r\n        const matches = AutosuggestHighlightMatch(suggestionText, query);\r\n        const parts = AutosuggestHighlightParse(suggestionText, matches);\r\n\r\n        //render the list and apply class of highlight to parts that match input\r\n        return (\r\n            <span className={'suggestion-content '}>\r\n                <span className=\"suggestion\">\r\n                    {\r\n                        parts.map((part, index) => {\r\n                            const className = part.highlight ? 'highlight' : null;\r\n        \r\n                            return (\r\n                                <span className={className} key={index}>{part.text}</span>\r\n                            );\r\n                        })\r\n                    }\r\n                </span>\r\n            </span>\r\n        );\r\n    };\r\n\r\n    onChange = (event, { newValue }) => {\r\n        this.setState({\r\n            value: newValue\r\n        });\r\n    };\r\n\r\n    //store suggestions to state\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n            suggestions: this.getSuggestions(value)\r\n        });\r\n    };\r\n\r\n    //clear state\r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n            suggestions: []\r\n        });\r\n    };\r\n\r\n    //when searchbar suggestion is clicked on instead of submitted via enter\r\n    onSuggestionSelected = (e, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            value: suggestionValue\r\n        }, () => {this.handleSubmit(e)})\r\n    }\r\n\r\n    //locally resolve submit and then pass to parent component\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.value) {\r\n            this.props.handleSearchInput(this.state.value);\r\n            this.setState({\r\n                value: ''\r\n            })\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'You may want to search for something first!'\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { value, suggestions } = this.state;\r\n\r\n        //set up input attributes here for Autosuggest\r\n        const inputProps = {\r\n            placeholder: 'product type, name or brand',\r\n            value,\r\n            onChange: this.onChange,\r\n            id: 'productSearch'\r\n        }\r\n\r\n        return (\r\n            <section className=\"searchBar\">\r\n                <form onSubmit={(e) => {this.handleSubmit(e)}}>\r\n                    <label htmlFor=\"productSearch\">Search for vegan makeup by type, name or brand.</label>\r\n                    <Autosuggest \r\n                        suggestions={suggestions.slice(0, 5)}\r\n                        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                        getSuggestionValue={this.getSuggestionValue}\r\n                        onSuggestionSelected={this.onSuggestionSelected}\r\n                        renderSuggestion={this.renderSuggestion}\r\n                        inputProps={inputProps}\r\n                        focusInputOnSuggestionClick={false}\r\n                    />\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass ProductText extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {}\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.props.addToWishlist(this.props.product);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"productTextContainer\">\r\n        <div className=\"productText\">\r\n          <h2 className=\"visuallyHidden\">{this.props.product.name}</h2>\r\n          <p>Brand: {!this.props.product.brand ? \"Not available\" : this.props.product.brand}</p>\r\n          <p>Price: {\r\n            this.props.product.price === \"0.0\" ? \"Not available\" : `${this.props.product.price_sign ? this.props.product.price_sign : '$'}${parseInt(this.props.product.price).toFixed(2)} ${this.props.product.currency ? this.props.product.currency : ''}`\r\n          }</p>\r\n          <p>Rating: {!this.props.product.rating ? \"Not yet rated\" : `${this.props.product.rating}/5`}</p>\r\n        </div>\r\n        <button className=\"add\" onClick={this.handleClick}><FontAwesomeIcon icon={faPlusCircle} /></button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductText;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link, useRouteMatch } from 'react-router-dom';\r\nimport ProductText from './ProductText';\r\n// Router and Route required for the review buttons, even though they're not technically used in the code itself.\r\n\r\nconst ReviewLink = (props) => {\r\n  let match = useRouteMatch({\r\n    path: props.to,\r\n    exact: props.activateOnlyWhenExact\r\n  });\r\n\r\n  return(\r\n    <div className={match ? \"hide\" : \"\"}>\r\n      <Link className=\"reviewLink\" onClick={(e) => props.setActiveID(e, props.product.id)} to={props.to}>{props.label}</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass ProductImage extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {}\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"productImage\" id=\"main\">\r\n        <Link to={`/project6/products/${this.props.product.id}`}>\r\n          <img\r\n            onClick={e => this.props.setActiveID(e, this.props.product.id)}\r\n            src={this.props.product.api_featured_image}\r\n            alt={this.props.product.name}\r\n          />\r\n        </Link>\r\n\r\n        <ProductText product={this.props.product} />\r\n\r\n        <ReviewLink\r\n          activateOnlyWhenExact={true}\r\n          setActiveID={this.props.setActiveID}\r\n          product={this.props.product}\r\n          to={`/project6/products/${this.props.product.id}/review`}\r\n          label=\"Reviews\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductImage;","// a couple of functions from the React library\r\nimport React, { Fragment } from \"react\";\r\n\r\nconst ReviewReadPanel = ({review}) => {\r\n    console.log(review)\r\n    // console.log(this.props.user.photoURL)\r\n    return (\r\n        <div className=\"reviewPanel\">\r\n\r\n            <div className=\"userDetails\">\r\n                <span>Review Date: {review.review.reviewDate}</span>\r\n                <div className=\"userImg\">\r\n                    <img src={review.review.userImg} alt={review.review.userName}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"review\">\r\n                <p>\r\n                <span className=\"userSpan\">{review.review.userName}</span>\r\n                {review.review.userReview}\r\n                <span className=\"userSpan\">Would you buy this again:</span>\r\n                {review.review.userRepurchase}\r\n                <span className=\"userSpan\">User Rated this product: </span>\r\n                {\r\n                    // error handling for user rating.\r\n                    review.review.userRating ?\r\n                    <Fragment>\r\n                        {review.review.userRating}/5\r\n                    </Fragment>\r\n                    :\r\n                    <Fragment>\r\n                        User did not provide rating out of 5.\r\n                    </Fragment>\r\n                }\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReviewReadPanel;\r\n","import React, { Component } from \"react\";\r\n\r\n\r\n// star rating component from https://scotch.io/tutorials/build-a-star-rating-component-for-react; adjusted for use in this project.\r\n\r\nclass StarRating extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        currentRating: this.props.currentRating\r\n        // this.state.currentRating used to generate value that assigns the visual number of yellow stars, as well as what is sent to state and firebase.\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setRating();\r\n    }\r\n\r\n    hoverHandler = ev => {\r\n        const stars = ev.target.parentElement.getElementsByClassName(\"star\");\r\n        const hoverValue = ev.target.dataset.value;\r\n        Array.from(stars).forEach(star => {\r\n        star.style.color = hoverValue >= star.dataset.value ? \"yellow\" : \"gray\";\r\n        });\r\n    };\r\n\r\n    setRating = ev => {\r\n        const stars = this.refs.rating.getElementsByClassName(\"star\");\r\n        Array.from(stars).forEach(star => {\r\n        star.style.color =\r\n            this.state.currentRating >= star.dataset.value ? \"yellow\" : \"gray\";\r\n        });\r\n    };\r\n\r\n    starClickHandler = ev => {\r\n        let rating = ev.target.dataset.value;\r\n        this.setState({ \r\n            currentRating: rating \r\n        }, () => {\r\n            this.props.starRatingFuncProp(this.state.currentRating)\r\n        }); // set state so the rating stays highlighted\r\n    }\r\n\r\n\r\n    handleKeyPress = (event) => {\r\n    if(event.key === 'Enter'){\r\n        let rating = event.target.dataset.value;\r\n        this.setState({ \r\n            currentRating: rating \r\n        }, () => {\r\n            this.props.starRatingFuncProp(this.state.currentRating)\r\n        }); // set state so the rating stays highlighted\r\n    } \r\n    this.setRating();\r\n    console.log(this.state.currentRating)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n        <div\r\n            className=\"rating\"\r\n            ref=\"rating\"\r\n            data-rating={this.state.currentRating}\r\n            onMouseOut={this.setRating}\r\n        >\r\n            {[...Array(+this.props.numberOfStars).keys()].map(n => {\r\n            return (\r\n                <span\r\n                className=\"star\"\r\n                key={n + 1}\r\n                data-value={n + 1}\r\n                value={n + 1}\r\n                onMouseOver={this.hoverHandler}\r\n                onClick={this.starClickHandler}\r\n                onKeyDown={ this.handleKeyPress } \r\n                tabIndex= { 0 }\r\n                aria-label=\"star for user rating\"\r\n                >\r\n                &#9733;\r\n                </span>\r\n            );\r\n            })}\r\n            \r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StarRating;\r\n","// a couple of functions from the React library\r\nimport React, { Component } from 'react';\r\n\r\nclass ReviewSubmitButton extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            readReview: true\r\n        }\r\n    \r\n}\r\n    render(){\r\n        return (\r\n            <button \r\n                    className=\"submitButton\" \r\n                    type=\"submit\">\r\n                    Submit\r\n            </button>\r\n            );\r\n    }\r\n    \r\n}\r\nexport default ReviewSubmitButton;","// a couple of functions from the React library\r\nimport React from \"react\";\r\nimport StarRating from './StarRating';\r\nimport ReviewSubmitButton from \"./ReviewSubmitButton\";\r\nimport Clock from \"react-live-clock\";\r\n\r\n\r\nconst ReviewForm = props => (\r\n    <div className=\"reviewInput wrapper\">\r\n        <form className=\"reviewForm\" action=\"submit\" onSubmit={e => props.handleFormSubmit(e)}>\r\n\r\n            <Clock\r\n                format={'dddd, MMMM Mo, YYYY, h:mm:ss A'}\r\n                ticking={true}\r\n                timezone={'America/Toronto'}\r\n                onChange={date => console.log(date.output)}\r\n                />\r\n                {/* {this.props.dateProp(date.output)} */}\r\n\r\n            <label \r\n                className=\"visuallyHidden\" \r\n                htmlFor=\"userName\"\r\n                >\r\n                Please Enter Your Name!\r\n            </label>\r\n            <input\r\n                name=\"userName\"\r\n                placeholder= \"What is your name?\"\r\n                className=\"nameInputField\"\r\n                type=\"text\"\r\n                id=\"userName\"\r\n                onChange={props.handleChange}\r\n                value={props.userNameProp} // good for accessibility and screen readers, this will track the changes even if they leave and come back\r\n            />\r\n\r\n            <label \r\n                className=\"visuallyHidden\" \r\n                htmlFor=\"userReview\"\r\n                >\r\n                Please Enter Your Name!\r\n            </label>\r\n            <textarea \r\n                id=\"userReview\" \r\n                name=\"userReview\"\r\n                rows=\"10\" \r\n                cols=\"80\" \r\n                placeholder=\"Your Review:\"\r\n                onChange={props.handleChangeTxtArea}\r\n                value={props.userReviewProp}\r\n                ></textarea>\r\n\r\n            <section className=\"radioSection\">\r\n            {/* radio input for purchase or won't repurchase. */}\r\n                <p>Would You Repurchase This Item?</p>\r\n                <div>\r\n                    <div className=\"yesInput\">\r\n                        <input \r\n                            type=\"radio\" \r\n                            id=\"Yes\" \r\n                            value=\"yes\"\r\n                            name=\"reviewForm\"\r\n                            onChange={props.radioChange}\r\n                            />\r\n                        <label htmlFor=\"Yes\">Yes</label>\r\n                    </div>\r\n\r\n                    <div className=\"noInput\">\r\n                        <input\r\n                            type=\"radio\" \r\n                            id=\"No\" \r\n                            value=\"no\"\r\n                            name=\"reviewForm\"\r\n                            onChange={props.radioChange\r\n                            }\r\n                            />\r\n                        <label htmlFor=\"No\">No</label>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            \r\n            <section className=\"userStarRating\">\r\n                <span className=\"userSpan\">How Would You Rate This Product:</span>\r\n                <div className=\"starsOnly\">\r\n                    <StarRating\r\n                        numberOfStars=\"5\"\r\n                        currentRating=\"0\"\r\n                        onClick={props.setRating}\r\n                        starRatingFuncProp = {props.starRatingFunc}\r\n                        />\r\n                </div>\r\n            </section>\r\n\r\n            <ReviewSubmitButton />\r\n\r\n        </form>\r\n    </div>\r\n);\r\n\r\nexport default ReviewForm;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport firebase from \"./../firebase\";\r\nimport Swal from \"sweetalert2\";\r\nimport ReviewReadPanel from \"./ReviewReadPanel\";\r\nimport ReviewForm from \"./ReviewForm\";\r\n\r\nclass ReviewParent extends Component {\r\n    constructor() {\r\n        super();\r\n        //setting initial state\r\n        this.state = {\r\n            //empty reviews array to take in database info\r\n            reviews: [],\r\n            //handlers for user review form\r\n            userName: \"\",\r\n            userRating: 0,\r\n            userReview: \"\",\r\n            userRepurchase: \"\",\r\n            //for assigning userID on mount\r\n            userID: \"\",\r\n            isReviewing: false,\r\n            userImg: \"\", \r\n            reviewDate: '',\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //error handling for anonymous users, assigns userID on mount which will be used for form submission to firebase\r\n        if (this.props.user) {\r\n            this.setState({\r\n                userID: this.props.user.uid,\r\n                userImg: this.props.user.photoURL\r\n            })\r\n        } else {\r\n            this.setState({\r\n                userID: '00000',\r\n                userImg: \"https://i.ibb.co/rQsjc9y/images.png\"\r\n            })\r\n        }\r\n\r\n        //create a variable that holds a reference to database\r\n        const dbRef = firebase.database().ref(`products/${this.props.activeID}/`);\r\n        //event listener that takes a callback function used to get data from the database and called response\r\n        dbRef.on(\"value\", response => {\r\n            const dataFromDb = response.val();\r\n            const newState = [];\r\n            //loop through dataFromDb and push reviews into array as well as the matching key to be used for React DOM\r\n            for (let key in dataFromDb) {\r\n                newState.push({ review: dataFromDb[key], key })\r\n            }\r\n            // see the information and parse the way we want it.\r\n            // call this.setState to update the component state using the local array newState.\r\n            this.setState({\r\n                    reviews: newState\r\n            });\r\n        })\r\n    }\r\n\r\n    //functions to handle inputs for review form:\r\n    handleChange = e => {\r\n        this.setState({\r\n            userName: e.target.value\r\n        })\r\n    }\r\n\r\n    handleChangeTxtArea = e => {\r\n        this.setState({\r\n            userReview: e.target.value\r\n        })\r\n    }\r\n\r\n    radioChange = (changeEvent) => {\r\n        this.setState({\r\n            userRepurchase: changeEvent.target.value\r\n        })\r\n    }\r\n\r\n    //on submit, push user input into firebase\r\n    handleFormSubmit = e => {\r\n        e.preventDefault();    \r\n        if (!this.state.userName ||\r\n            !this.state.userReview ||\r\n            !this.state.userRepurchase) {\r\n                Swal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Oops...\",\r\n                    text:\r\n                        \"You've missed something! Please fill everything in the form!\"\r\n                });\r\n            } else {\r\n                const dbRef = firebase.database().ref(`products/${this.props.activeID}/`);\r\n                const dbRefUser = firebase.database().ref(`users/${this.state.userID}/reviews/`);\r\n                //double push to save review to products and to users\r\n                //firebase database is structured to allow ease of referencing information for 3 different pulls: 1. all reviews by product 2. all reviews by user and 3. all wishlist items by user\r\n                dbRef.push({\r\n                    userName: this.state.userName,\r\n                    userImg:this.state.userImg, \r\n                    userRating:this.state.userRating,\r\n                    userReview: this.state.userReview,\r\n                    userRepurchase: this.state.userRepurchase,\r\n                    userID: this.state.userID\r\n                })\r\n                dbRefUser.push({\r\n                    userName: this.state.userName,\r\n                    userImg: this.state.userImg,\r\n                    userRating: this.state.userRating,\r\n                    userReview: this.state.userReview,\r\n                    userRepurchase: this.state.userRepurchase,\r\n                    userID: this.state.userID,\r\n                    productID: this.props.activeID\r\n                })\r\n                // return input to empty.\r\n                this.setState({\r\n                    userName: \"\",\r\n                    userReview: \"\",\r\n                    userRepurchase: \"\"\r\n                }, this.setRead)\r\n            }\r\n        };\r\n\r\n    setRead = () => {\r\n        if (this.props.isWriting) {\r\n            this.props.toggleReadReview();\r\n        }\r\n    }\r\n\r\n    setWrite = () => {\r\n        if (!this.props.isWriting) {\r\n            this.props.toggleReadReview();\r\n        }\r\n    }\r\n\r\n    getStarRating = (currentRating) => {\r\n        this.setState({\r\n            userRating: currentRating\r\n        })\r\n    } \r\n    \r\n    getUserInputDateTime = (currentDateTime) => {\r\n        this.setState({\r\n            reviewDate: currentDateTime\r\n        });\r\n    }\r\n\r\n\r\n    render(){\r\n        // console.log(this.props.user.photoURL)\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"reviewButtons\">\r\n                    <button onClick={this.setWrite}>write review</button>\r\n                    <button onClick={this.setRead}>reviews</button>\r\n                </div>\r\n                <div className={`mainGrid wrapper noOverflowX ${!this.props.isWriting && \"scrollOn\"}`} >\r\n                { \r\n                    !this.props.isWriting ? \r\n                    <div className=\"reviews\">\r\n                        { this.state.reviews.length !== 0\r\n                            ?\r\n                            this.state.reviews.map(reviewList => {\r\n                                return <ReviewReadPanel review={reviewList} key={reviewList.key} user={this.props.user}/>\r\n                            })\r\n                            :\r\n                            <p>Oops, no reviews exist of this product yet! Why not leave your own review if you've tried this product before?</p>\r\n                        }\r\n                    </div> : \r\n                    <ReviewForm\r\n                        handleFormSubmit={this.handleFormSubmit}\r\n                        handleChangeTxtArea={this.handleChangeTxtArea}\r\n                        handleChange={this.handleChange}\r\n                        radioChange={this.radioChange}\r\n                        userNameProp={this.state.userName}\r\n                        userReviewProp={this.state.userReview}\r\n                        userStarProp={this.onStarClick}\r\n                        userRatingProp={this.userRating}\r\n                        starRatingFunc = {this.getStarRating}\r\n                        dateProp = {this.getUserInputDateTime}\r\n                    />\r\n                }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ReviewParent;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport ReviewParent from './ReviewParent';\r\n// Router required, even though they're not technically used in the code itself.\r\n\r\n\r\nclass ProductInfo extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      maxLength: 250\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"productInfo\">\r\n          <h2>{this.props.product.name}</h2>\r\n          <p>\r\n            {this.props.product.description.length > this.state.maxLength ? (\r\n              <Fragment>\r\n                {`${this.props.product.description.substring(\r\n                  0,\r\n                  this.state.maxLength\r\n                )}... `}\r\n                <span className=\"infoLink\">\r\n                  <a\r\n                    href={this.props.product.product_link}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    Product Page\r\n                  </a>\r\n                </span>\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                {this.props.product.description}\r\n                <span className=\"infoLink\">\r\n                  <a\r\n                    href={this.props.product.product_link}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    Product Page\r\n                  </a>\r\n                </span>\r\n              </Fragment>\r\n            )}\r\n          </p>\r\n          <h3>Colors:</h3>\r\n          <div className=\"productColors\">\r\n            {this.props.product.product_colors.length === 0 ? (\r\n              <p>No colors available.</p>\r\n            ) : (\r\n              this.props.product.product_colors.map(color => {\r\n                return (\r\n                  <span\r\n                    key={color.colour_name}\r\n                    aria-label={color.colour_name}\r\n                    style={{ background: color.hex_value }}\r\n                    title={color.colour_name}\r\n                  ></span>\r\n                );\r\n              })\r\n            )}\r\n          </div>\r\n        </div>\r\n        <Route\r\n          path=\"/project6/products/:productID/review\"\r\n          exact\r\n          render={() => (\r\n            <ReviewParent\r\n              user={this.props.user}\r\n              activeID={this.props.activeID}\r\n              isWriting={this.props.isWriting}\r\n              toggleReadReview={this.props.toggleReadReview}\r\n              userCheck={this.props.userCheck}\r\n            />\r\n          )}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductInfo;","import React, { Component, Fragment } from 'react';\r\nimport ProductImage from './ProductImage';\r\nimport ProductInfo from './ProductInfo';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n// React-router-dom required, even though not used in code.\r\n\r\nclass ResultItem extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    // max length for product description\r\n    this.state = {\r\n      isWriting: false\r\n    }\r\n  }\r\n\r\n  toggleReadReview = () => {\r\n    this.setState({isWriting: !this.state.isWriting});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n\r\n        <div className={`result ${this.props.activeID === this.props.product.id && \"selected\"}`} >\r\n          <ProductImage product={this.props.product} setActiveID={this.props.setActiveID}/>\r\n          {this.props.activeID === this.props.product.id && \r\n          <ProductInfo \r\n          isWriting={this.state.isWriting} \r\n          toggleReadReview={this.toggleReadReview} \r\n          product={this.props.product} \r\n          activeID={this.props.activeID} \r\n          user={this.props.user}\r\n          userCheck={this.props.userCheck}/>}\r\n\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultItem;","import React, { Component } from 'react';\r\nimport ResultItem from './ResultItem';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport firebase from '../firebase';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass Results extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      activeID: null,\r\n      wishlist: []\r\n    }\r\n  }\r\n\r\n  setActiveID = (e, id) => {\r\n    this.setState({activeID: id});\r\n  }\r\n\r\n  checkForProduct = (productID) => {\r\n    let itemAlreadyOnList = false;\r\n    this.state.wishlist.filter(product => {\r\n      if(product === productID){\r\n        itemAlreadyOnList = true;\r\n        return true;\r\n      }\r\n    });\r\n    return itemAlreadyOnList;\r\n  }\r\n\r\n  addToWishlist = (product) => {\r\n    if(!this.props.user) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Please log in to make a wishlist!'\r\n      })\r\n    } else if(this.checkForProduct(product.id)) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'This product is already on your wishlist!'\r\n      })\r\n    } else {\r\n      const dbRefUserWish = firebase.database().ref(`users/${this.props.user.uid}/wishlist`);\r\n      dbRefUserWish.push(product.id);\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Added to Wishlist!',\r\n        text: `${product.name} was added to your wishlist.`\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.user) {\r\n      const dbRefUserWish = firebase.database().ref(`users/${this.props.user.uid}/wishlist`);\r\n      dbRefUserWish.on('value', response => {\r\n        console.log(response.val())\r\n        if(response.val()) {\r\n          this.setState({wishlist: Object.values(response.val())});\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const dbRefUserWish = firebase.database().ref(`users/${this.props.user.uid}/wishlist`);\r\n    dbRefUserWish.off();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n     \r\n      <section className=\"results\">\r\n        {\r\n          this.props.filteredResults.length > 0\r\n            ?\r\n            this.props.filteredResults.map(product => {\r\n              return (\r\n                <ResultItem \r\n                    key={product.id} \r\n                    setActiveID={this.setActiveID} \r\n                    activeID={this.state.activeID} \r\n                    product={product} \r\n                    user={this.props.user} \r\n                    addToWishlist={this.addToWishlist}/>\r\n              );\r\n            })\r\n            :\r\n            <p>No results! Please try again.</p>\r\n        }\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Results;","import React, { Component } from 'react';\r\nimport Coverflow from \"react-coverflow\";\r\n\r\nclass Carousel extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            randomVeganArray: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const veganArrayCopy = [...this.props.allItemsArray]\r\n        const randomFive = []\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            let randomNum = Math.floor(Math.random() * veganArrayCopy.length)\r\n            randomFive.push(veganArrayCopy[randomNum])\r\n            veganArrayCopy.splice(randomNum, 1)\r\n        }\r\n\r\n        this.setState({\r\n            randomVeganArray: randomFive\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Coverflow\r\n                width={960}\r\n                height={450}\r\n                displayQuantityOfSide={2}\r\n                enableScroll={true}\r\n                clickable={true}\r\n                active={0}\r\n            >\r\n                {\r\n                    this.state.randomVeganArray.map((eachItem) => {\r\n                        return (\r\n                            <img key={eachItem.id}\r\n                                src={eachItem.image_link}\r\n                                alt={eachItem.name}\r\n                                data-action={eachItem.product_link}\r\n                                style={{ display: 'block', width: '100%' }}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </Coverflow>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Carousel;","import React, { Component } from 'react';\r\n\r\n\r\nclass FilterResults extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            refineArray: [],\r\n        }\r\n    }\r\n    // function gets triggered onChange of the checkbox and added to the state or remove when unchecked\r\n    filterSelection = (e) => {\r\n        const set = new Set(this.state.refineArray);\r\n        e.target.checked \r\n        ? \r\n        set.add(e.target.name) \r\n        : \r\n        set.delete(e.target.name);\r\n        this.setState({ \r\n            refineArray: [...set] \r\n        }, \r\n        this.updateRefinedItemsMain);\r\n\r\n    }\r\n    // Function to pass on the props to the Main component\r\n    updateRefinedItemsMain = (e) => {\r\n        this.props.updaterefinedItems(e, this.state.refineArray)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='filterOptions'>\r\n                {/* skip link for accessibility to bypass the filter checkboxes */}\r\n                <a href=\"#main\" class=\"skip-link\">\r\n                    <div>Skip to main content</div>\r\n                </a>\r\n\r\n                <h4>Filter results</h4>\r\n                <div className='filterContainer'>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"Canadian\" \r\n                        name='Canadian' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"Canadian\"> Canadian</label>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"CertClean\" \r\n                        name='CertClean' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"CertClean\"> Cert Clean</label>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"chemicalFree\" \r\n                        name='Chemical Free' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"chemicalFree\"> Chemical Free</label>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"dairyFree\" \r\n                        name='Dairy Free' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"dairyFree\"> Dairy Free</label>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"ewgVerified\" \r\n                        name='EWG Verified' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"ewgVerified\"> EWG Verified</label>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"ecoCert\" \r\n                        name='EcoCert' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"ecoCert\"> Eco Cert</label>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"fairTrade\" \r\n                        name='Fair Trade' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"fairTrade\"> Fair Trade</label>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"glutenFree\" \r\n                        name='Gluten Free' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"glutenFree\"> Gluten Free</label>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"hypoallergenic\" \r\n                        name='Hypoallergenic' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"hypoallergenic\"> Hypoallergenic</label>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"natural\" \r\n                        name='Natural' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"natural\"> Natural</label>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"nonGmo\" \r\n                        name='Non-GMO' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"nonGmo\"> Non-GMO</label>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"organic\" \r\n                        name='Organic' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"organic\"> Organic</label>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"peanutFreeProduct\" \r\n                        name='Peanut Free Product' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"peanutFreeProduct\"> Peanut Free Product</label>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"sugarFree\" \r\n                        name='Sugar Free' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"sugarFree\"> Sugar Free</label>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"usdaOrganic\" \r\n                        name='USDA Organic' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"usdaOrganic\"> USDA Organic</label>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"alcoholFree\" \r\n                        name='alcohol free' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"alcoholFree\"> Alcohol Free</label>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"oilFree\" \r\n                        name='oil free' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"oilFree\"> Oil Free</label>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                        type=\"checkbox\" \r\n                        id=\"waterFree\" \r\n                        ame='water free' \r\n                        onChange={this.filterSelection} />\r\n                        <label htmlFor=\"waterFree\"> Water Free</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterResults ","import React, { Component } from 'react';\r\n\r\nclass Sorting extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {}\r\n    }\r\n\r\n    sortingHandle = (e) => {\r\n        const sortDataArray = e.target.value.split('.');\r\n        let isAscending = false;\r\n\r\n        if(sortDataArray[1] === 'ascending' || sortDataArray[0] === 'brand') {\r\n            isAscending = true;\r\n        } else {\r\n            isAscending = false;\r\n        }\r\n\r\n        const sortData = {\r\n            value: sortDataArray[0],\r\n            ascending: isAscending\r\n        }\r\n\r\n        this.props.updateSortBy(sortData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='sortContainer'>\r\n                <label htmlFor=\"sorting\">Sort By : </label>\r\n\r\n                <select id=\"sorting\" onChange={this.sortingHandle}>\r\n                    <optgroup label=\"Choose One\"></optgroup>\r\n                    <option value=\"brand\" >Alphabetical (by brands)</option>\r\n                    <optgroup label='Ratings'></optgroup>\r\n                    <option value=\"rating.descending\">Rating (Descending)</option>\r\n                    <option value=\"rating.ascending\">Rating (Ascending)</option>\r\n                    <optgroup label='Sort by Price'></optgroup>\r\n                    <option value=\"price.descending\" >Price (Highest)</option>\r\n                    <option value=\"price.ascending\" >Price (Lowest)</option>\r\n\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sorting;","import React, { Component } from 'react';\r\nimport firebase from '../firebase'\r\nimport Results from './Results'\r\n\r\nclass Wishlist extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userWishlist: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const dbRefUserWish = firebase.database().ref(`users/${this.props.user.uid}/wishlist`);\r\n        console.log(this.props.location);\r\n        dbRefUserWish.on('value', response => {\r\n            if(response.val()){\r\n                const productIDs = Object.values(response.val());\r\n                const productArray = [];\r\n                productIDs.forEach(id => {\r\n                    this.props.veganProducts.filter(product => {\r\n                        if (product.id === id) {\r\n                            productArray.push(product);\r\n                            return true;\r\n                        }\r\n                    });\r\n                });\r\n    \r\n                this.setState({ userWishlist: productArray });\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"wishlist\">\r\n                <h2>Your Wishlist</h2>\r\n                <Results filteredResults={this.state.userWishlist} user={this.props.user} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wishlist;","import React, { Component } from 'react';\r\nimport firebase from '../firebase';\r\nimport ReviewReadPanel from './ReviewReadPanel';\r\n\r\nclass UserReviews extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        //initial states\r\n        this.state = {\r\n            //empty reviews array for firebase reviews to be stored\r\n            reviews: [],\r\n            //empty products array for products reviewed to be stored\r\n            products: []\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const dbRefUser = firebase.database().ref(`users/${this.props.user.uid}/reviews/`);\r\n        dbRefUser.on(\"value\", response => {\r\n            const dataFromDB = response.val();\r\n            const newState = [];\r\n            const productIDs = [];\r\n            const reviewedProducts = [];\r\n            //loop through dataFromDB and push reviews into array as well as the matching key to be used for React DOM\r\n            for (let key in dataFromDB) {\r\n                newState.push({ review: dataFromDB[key], key });\r\n                productIDs.push(dataFromDB[key].productID);\r\n            }\r\n            //pull product info of products reviewed from veganProducts\r\n            if (productIDs.length !== 0) {\r\n                this.props.veganProducts.map(product => {\r\n                    return productIDs.forEach(id => {\r\n                        if (id === product.id) {\r\n                            reviewedProducts.push(product)\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            //update state for reviews array\r\n            this.setState({\r\n                reviews: newState,\r\n                products: reviewedProducts\r\n            }, () => {console.log(this.state.reviews, this.state.products)})\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"userReviews\">\r\n                {\r\n                    this.state.reviews.length !== 0\r\n                        ?\r\n                        this.state.reviews.map(review => {\r\n                            return (\r\n                                <div key={review.key}>\r\n                                    <div className=\"productImage\">\r\n                                        <img src={this.state.products[this.state.reviews.indexOf(review)].api_featured_image} alt={this.state.products[this.state.reviews.indexOf(review)].name} />\r\n                                        <div className=\"productTextContainer\">\r\n                                            <div className=\"productText\">\r\n                                            <h2>{this.state.products[this.state.reviews.indexOf(review)].name}</h2>\r\n                                            <p>Brand: {!this.state.products[this.state.reviews.indexOf(review)].brand ? \"Not available\" : this.state.products[this.state.reviews.indexOf(review)].brand}</p>\r\n                                            <p>Price: {\r\n                                                this.state.products[this.state.reviews.indexOf(review)].price === \"0.0\" ? \"Not available\" :\r\n                                                `\r\n                                                ${this.state.products[this.state.reviews.indexOf(review)].price_sign ? this.state.products[this.state.reviews.indexOf(review)].price_sign : '$'}${parseInt(this.state.products[this.state.reviews.indexOf(review)].price).toFixed(2)} \r\n                                                ${this.state.products[this.state.reviews.indexOf(review)].currency ? this.state.products[this.state.reviews.indexOf(review)].currency : ''}\r\n                                                `\r\n                                            }</p>\r\n                                            <p>Rating: {!this.state.products[this.state.reviews.indexOf(review)].rating ? \"Not yet rated\" : `${this.state.products[this.state.reviews.indexOf(review)].rating}/5`}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <ReviewReadPanel review={review} user={this.props.user} />\r\n                                </div>\r\n                            )\r\n                        })\r\n                        :\r\n                        <p>You haven't reviewed any products yet! Try going to Search and check out some products you can review.</p>\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserReviews;","import React, { Component, Fragment } from 'react';\r\nimport Search from './Search';\r\nimport Results from './Results';\r\nimport Carousel from './Carousel';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport FilterResults from './FilterResults';\r\nimport Sorting from './Sorting';\r\nimport Wishlist from './Wishlist';\r\nimport UserReviews from './UserReviews';\r\n\r\nconst customHistory = createBrowserHistory();\r\n\r\nclass Main extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            searchInput: '',\r\n            filteredResults: [],\r\n            originalResults: [],\r\n            sortBy: {\r\n                value: 'brand',\r\n                ascending: true\r\n            },\r\n            isSearched: false\r\n        }\r\n    }\r\n\r\n    handleSearchInput = (input) => {\r\n        const validateInput = input.toLowerCase();\r\n\r\n        this.setState({\r\n            searchInput: validateInput,\r\n            isSearched: true\r\n        }, this.filterResults)\r\n    }\r\n\r\n\r\n    sortArray = (arrayToSort) => {\r\n        // Only sort arrays with content\r\n        if (arrayToSort.length !== 0) {\r\n            // spread the passed array so we can work with it\r\n            let sortingArray = [...arrayToSort];\r\n\r\n            sortingArray.sort((productA, productB) => {\r\n                // sortBy is an object that contains the values of the the user's choice\r\n                let productAValue = productA[this.state.sortBy.value];\r\n                let productBValue = productB[this.state.sortBy.value];\r\n                let returnValue;\r\n\r\n                // return value determines sorting order\r\n                if(this.state.sortBy.ascending) {\r\n                    returnValue = 1;\r\n                } else {\r\n                    returnValue = -1;\r\n                }\r\n\r\n                // The next 2 if conditions determine what we should do with the values\r\n                // if value is null then return\r\n                // if it's not a number when parsed, turn it to uppercase\r\n                // if it's a number parse it to a float\r\n                if (!productAValue) {\r\n                    return -returnValue;\r\n                } else if(isNaN(parseInt(productAValue))) {\r\n                    productAValue = productAValue.toUpperCase();\r\n                } else {\r\n                    productAValue = parseFloat(productAValue);\r\n                }\r\n\r\n                if (!productBValue) {\r\n                    return returnValue;\r\n                } else if(isNaN(parseInt(productBValue))) {\r\n                    productBValue = productBValue.toUpperCase();\r\n                } else {\r\n                    productBValue = parseFloat(productBValue);\r\n                }\r\n\r\n                return (productAValue < productBValue) ? -returnValue : (productAValue > productBValue) ? returnValue : 0;\r\n            });\r\n\r\n            return sortingArray;\r\n        }\r\n    }\r\n\r\n    filterResults = () => {\r\n        //called from handleSearchInput() after searchInput state has been updated\r\n        //create an empty filteredArray\r\n        let filteredArray = [];\r\n        //assign filtered veganProducts return to filteredArray\r\n        filteredArray = this.props.veganProducts.filter(product => {\r\n            const productType = product.product_type ? product.product_type.toLowerCase() : \"\";\r\n            const productName = product.name ? product.name.toLowerCase() : \"\";\r\n            const productBrand = product.brand ? product.brand.toLowerCase() : \"\";\r\n            return productType.includes(this.state.searchInput) || productName.includes(this.state.searchInput) || productBrand.includes(this.state.searchInput);\r\n        });\r\n\r\n        //create empty sortedArray\r\n        let sortedArray = [];\r\n        //only sort if there's something there\r\n        if (filteredArray.length > 0) {\r\n            sortedArray = this.sortArray(filteredArray);\r\n        }\r\n\r\n        //if sorted, set the new results to state, if not sorted reset empty arrays to state to trigger a render\r\n        if (sortedArray.length > 0) {\r\n            this.setState({\r\n                filteredResults: sortedArray,\r\n                originalResults: sortedArray\r\n            }, () => {\r\n                customHistory.push('/project6/products');\r\n            });\r\n        } else {\r\n            this.setState({\r\n                filteredResults: filteredArray,\r\n                originalResults: filteredArray\r\n            }, () => {\r\n                customHistory.push('/project6/products');\r\n            });\r\n        }\r\n    }\r\n\r\n    //When any choice from the from filtering gets checked it triggers the function and pass on the props to as an arguments and populate the array by checking if something from filter selection gets clicked populate filteredResult array with new array else show the original array.\r\n    newResults = (e, refinedCategory) => {\r\n        let filterRefinedArray = [];\r\n        if (refinedCategory.length !== 0) {\r\n            this.state.originalResults.map((eachProduct) => {\r\n                return eachProduct.tag_list.forEach((eachTag) => {\r\n                    refinedCategory.forEach((choice) => {\r\n                        if (choice === eachTag) {\r\n                            if (!filterRefinedArray.includes(eachProduct)) {\r\n                                filterRefinedArray.push(eachProduct)\r\n                            }\r\n                        };\r\n                    })\r\n                })\r\n            })\r\n            const sortedRefinedArray = this.sortArray(filterRefinedArray);\r\n            if(sortedRefinedArray){\r\n                this.setState({\r\n                    filteredResults: sortedRefinedArray\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    filteredResults: filterRefinedArray\r\n                })\r\n            }\r\n            \r\n        } else {\r\n            this.setState({\r\n                filteredResults: this.state.originalResults\r\n            })\r\n        }\r\n    }\r\n\r\n    updateSortBy = (option) => {\r\n        this.setState({\r\n            sortBy: option\r\n        }, () => {\r\n            const sortedArray = this.sortArray(this.state.filteredResults);\r\n            this.setState({\r\n                filteredResults: sortedArray\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {        \r\n        return (\r\n            <main className=\"wrapper\">\r\n                <Switch>\r\n                    <Route path=\"/project6/\" exact>\r\n                        {\r\n                            this.state.isSearched\r\n                            ?\r\n                            <Redirect to=\"/project6/products\" />\r\n                            :\r\n                            <Fragment>\r\n                                <Search\r\n                                    veganProducts={this.props.veganProducts}\r\n                                    handleSearchInput={this.handleSearchInput}\r\n                                />\r\n                                <Carousel allItemsArray={this.props.veganProducts}/>\r\n                            </Fragment>\r\n                        }\r\n                    </Route>\r\n                    <Route path=\"/project6/products\">\r\n                        <Search\r\n                            veganProducts={this.props.veganProducts}\r\n                            handleSearchInput={this.handleSearchInput}\r\n                        />\r\n\r\n                        <FilterResults updaterefinedItems={this.newResults} />\r\n\r\n                        <Sorting\r\n                            filteredResults={this.state.filteredResults}\r\n                            updateSortBy= {this.updateSortBy}\r\n                        />\r\n\r\n                        <Results \r\n                            filteredResults={this.state.filteredResults} \r\n                            user={this.props.user} \r\n                            userCheckProps = {this.props.userCheck}/>\r\n\r\n                    </Route>\r\n                    <Route exact path=\"/project6/wishlist\">\r\n                        {\r\n                            this.props.user\r\n                                ?\r\n                                <Wishlist user={this.props.user} veganProducts={this.props.veganProducts}/>\r\n                                :\r\n                                <Redirect to=\"/project6/\" />\r\n                        }\r\n                    </Route>\r\n                    <Route exact path=\"/project6/reviews\">\r\n                        {\r\n                            this.props.user\r\n                                ?\r\n                                <UserReviews\r\n                                    user={this.props.user}\r\n                                    veganProducts={this.props.veganProducts}\r\n                                />\r\n                                :\r\n                                <Redirect to=\"/project6/\" />\r\n                        }\r\n                    </Route>\r\n                </Switch>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"wrapper\">\r\n                <p>&copy; 2020 \r\n                    <a href=\"http://xyoung.ca/\" \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\">Sui Young</a>, \r\n\r\n                    <a href=\"http://naveenmalhotra.ca/\" \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\">Naveen Malhotra</a>, \r\n\r\n                    <a href=\"https://github.com/joemano\" \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\">Jobert Manosca</a>, \r\n                    \r\n                    <a href=\"https://stephaniekerr.io\" \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\">Stephanie Kerr</a></p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","// a couple of functions from the React library\r\nimport React, { Component, Fragment } from \"react\";\r\n//import firebase\r\nimport firebase, { auth, provider } from './firebase';\r\n// import components\r\nimport Helmet from './Components/Helmet.js';\r\nimport Preloader from './Components/Preloader';\r\nimport Header from './Components/Header';\r\nimport Main from './Components/Main';\r\nimport Footer from './Components/Footer';\r\n// import axios\r\nimport axios from 'axios';\r\n// import react-router\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n// CSS for the `App` component\r\nimport \"./App.scss\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      //set initial state for api data\r\n      veganArray: [],\r\n      //set initial state for preloader\r\n      isLoading: true,\r\n      //set initial state for user login (auth details and historical)\r\n      user: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    //api call for data, stored in state veganArray\r\n    //state isLoading set to false to unmount preloader and mount webpage components\r\n    axios({\r\n      url: 'https://makeup-api.herokuapp.com/api/v1/products.json',\r\n      method: 'GET',\r\n      responseType: 'json',\r\n      params: {\r\n        product_tags: 'vegan',\r\n      }\r\n    }).then((response) => {\r\n      this.setState({\r\n        veganArray: response.data,\r\n        isLoading: false,\r\n      })\r\n    })\r\n    //authetication history checked for user to allow persisted login status which triggers loggedin components\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.setState({ user });\r\n      };\r\n    })\r\n  }\r\n\r\n  //this function initializes the popup from google to sign in and sets the user state to user's details\r\n  login = () => {\r\n    auth.signInWithPopup(provider)\r\n      .then((result) => {\r\n        this.setState({\r\n          user: result.user\r\n        });\r\n      });\r\n  }\r\n\r\n  //this function initializes sign out and sets the user state back to null, returning enduser to guest/anonymous view components\r\n  logout = () => {\r\n    auth.signOut()\r\n      .then(() => {\r\n        this.setState({\r\n          user: null\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        {/* router may only have one child therefore wrap all components in a fragment */}\r\n        <Fragment>\r\n          {/* helmet allows for injected title, meta tags */}\r\n          <Helmet />\r\n          {/* determine component view based on isLoading state */}\r\n          {this.state.isLoading ? (\r\n            <Preloader />\r\n          ) : (\r\n            <div className=\"outerWrapper\">\r\n              <Header\r\n                login={this.login}\r\n                logout={this.logout}\r\n                user={auth.currentUser}\r\n              />\r\n              <Main\r\n                veganProducts={this.state.veganArray}\r\n                user={auth.currentUser}\r\n                userCheck={auth.onAuthStateChanged}\r\n              />\r\n              <Footer />\r\n            </div>\r\n          )}\r\n        </Fragment>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}